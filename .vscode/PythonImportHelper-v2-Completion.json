[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "permissions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "routers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "filters",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "get_schema_view",
        "importPath": "drf_yasg.views",
        "description": "drf_yasg.views",
        "isExtraImport": true,
        "detail": "drf_yasg.views",
        "documentation": {}
    },
    {
        "label": "openapi",
        "importPath": "drf_yasg",
        "description": "drf_yasg",
        "isExtraImport": true,
        "detail": "drf_yasg",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "autoslug.fields",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "autoslug.fields",
        "description": "autoslug.fields",
        "detail": "autoslug.fields",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AutoSlugField",
        "importPath": "autoslug",
        "description": "autoslug",
        "isExtraImport": true,
        "detail": "autoslug",
        "documentation": {}
    },
    {
        "label": "AutoSlugField",
        "importPath": "autoslug",
        "description": "autoslug",
        "isExtraImport": true,
        "detail": "autoslug",
        "documentation": {}
    },
    {
        "label": "AutoSlugField",
        "importPath": "autoslug",
        "description": "autoslug",
        "isExtraImport": true,
        "detail": "autoslug",
        "documentation": {}
    },
    {
        "label": "Student",
        "importPath": "userapp.models",
        "description": "userapp.models",
        "isExtraImport": true,
        "detail": "userapp.models",
        "documentation": {}
    },
    {
        "label": "Worker",
        "importPath": "userapp.models",
        "description": "userapp.models",
        "isExtraImport": true,
        "detail": "userapp.models",
        "documentation": {}
    },
    {
        "label": "Student",
        "importPath": "userapp.models",
        "description": "userapp.models",
        "isExtraImport": true,
        "detail": "userapp.models",
        "documentation": {}
    },
    {
        "label": "Field",
        "importPath": "userapp.models",
        "description": "userapp.models",
        "isExtraImport": true,
        "detail": "userapp.models",
        "documentation": {}
    },
    {
        "label": "DAYS",
        "importPath": "userapp.models",
        "description": "userapp.models",
        "isExtraImport": true,
        "detail": "userapp.models",
        "documentation": {}
    },
    {
        "label": "TIME",
        "importPath": "userapp.models",
        "description": "userapp.models",
        "isExtraImport": true,
        "detail": "userapp.models",
        "documentation": {}
    },
    {
        "label": "mainapp.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "mainapp.models",
        "description": "mainapp.models",
        "detail": "mainapp.models",
        "documentation": {}
    },
    {
        "label": "Branch",
        "importPath": "mainapp.models",
        "description": "mainapp.models",
        "isExtraImport": true,
        "detail": "mainapp.models",
        "documentation": {}
    },
    {
        "label": "Group",
        "importPath": "mainapp.models",
        "description": "mainapp.models",
        "isExtraImport": true,
        "detail": "mainapp.models",
        "documentation": {}
    },
    {
        "label": "ModelSerializer",
        "importPath": "rest_framework.serializers",
        "description": "rest_framework.serializers",
        "isExtraImport": true,
        "detail": "rest_framework.serializers",
        "documentation": {}
    },
    {
        "label": "ModelSerializer",
        "importPath": "rest_framework.serializers",
        "description": "rest_framework.serializers",
        "isExtraImport": true,
        "detail": "rest_framework.serializers",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "ModelViewSet",
        "importPath": "rest_framework.viewsets",
        "description": "rest_framework.viewsets",
        "isExtraImport": true,
        "detail": "rest_framework.viewsets",
        "documentation": {}
    },
    {
        "label": "ModelViewSet",
        "importPath": "rest_framework.viewsets",
        "description": "rest_framework.viewsets",
        "isExtraImport": true,
        "detail": "rest_framework.viewsets",
        "documentation": {}
    },
    {
        "label": "AllowAny",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "AllowAny",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "AllowAny",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "ExpensesAPISerializer",
        "importPath": "finance.serializers",
        "description": "finance.serializers",
        "isExtraImport": true,
        "detail": "finance.serializers",
        "documentation": {}
    },
    {
        "label": "PaymentAPISerializer",
        "importPath": "finance.serializers",
        "description": "finance.serializers",
        "isExtraImport": true,
        "detail": "finance.serializers",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "finance.serializers",
        "description": "finance.serializers",
        "isExtraImport": true,
        "detail": "finance.serializers",
        "documentation": {}
    },
    {
        "label": "pprint",
        "importPath": "pprint",
        "description": "pprint",
        "isExtraImport": true,
        "detail": "pprint",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "ListAPIView",
        "importPath": "rest_framework.generics",
        "description": "rest_framework.generics",
        "isExtraImport": true,
        "detail": "rest_framework.generics",
        "documentation": {}
    },
    {
        "label": "RetrieveAPIView",
        "importPath": "rest_framework.generics",
        "description": "rest_framework.generics",
        "isExtraImport": true,
        "detail": "rest_framework.generics",
        "documentation": {}
    },
    {
        "label": "django.core.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "RegexValidator",
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "isExtraImport": true,
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "config.asgi",
        "description": "config.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "config.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = \"django-insecure-0$ap^wbn5w(rb-tcmz^@dc$p%se6mdxg+b659(0oijp#^!i9u4\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "SECRET_KEY = \"django-insecure-0$ap^wbn5w(rb-tcmz^@dc$p%se6mdxg+b659(0oijp#^!i9u4\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    # global apps",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    # global apps\n    'rest_framework',\n    'drf_yasg',",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "MIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n]\nROOT_URLCONF = \"config.urls\"",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "ROOT_URLCONF = \"config.urls\"\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "WSGI_APPLICATION = \"config.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}\n# Password validation",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "LANGUAGE_CODE = \"en-us\"\nTIME_ZONE = \"Asia/Tashkent\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "TIME_ZONE = \"Asia/Tashkent\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n\"\"\" Rest framework settings \"\"\"",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n\"\"\" Rest framework settings \"\"\"\nREST_FRAMEWORK = {",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n\"\"\" Rest framework settings \"\"\"\nREST_FRAMEWORK = {\n    # Use Django's standard `django.contrib.auth` permissions,",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "STATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n\"\"\" Rest framework settings \"\"\"\nREST_FRAMEWORK = {\n    # Use Django's standard `django.contrib.auth` permissions,\n    # or allow read-only access for unauthenticated users.\n    'DEFAULT_PERMISSION_CLASSES': [\n        'rest_framework.permissions.AllowAny'",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n\"\"\" Rest framework settings \"\"\"\nREST_FRAMEWORK = {\n    # Use Django's standard `django.contrib.auth` permissions,\n    # or allow read-only access for unauthenticated users.\n    'DEFAULT_PERMISSION_CLASSES': [\n        'rest_framework.permissions.AllowAny'\n    ],\n    'DEFAULT_FILTER_BACKENDS': [\n        'django_filters.rest_framework.DjangoFilterBackend'",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    # Use Django's standard `django.contrib.auth` permissions,\n    # or allow read-only access for unauthenticated users.\n    'DEFAULT_PERMISSION_CLASSES': [\n        'rest_framework.permissions.AllowAny'\n    ],\n    'DEFAULT_FILTER_BACKENDS': [\n        'django_filters.rest_framework.DjangoFilterBackend'\n    ]\n}",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "schema_view",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "schema_view = get_schema_view(\n   openapi.Info(\n      title=\"Snippets API\",\n      default_version='v1',\n      description=\"Test description\",\n      terms_of_service=\"https://www.google.com/policies/terms/\",\n      contact=openapi.Contact(email=\"contact@snippets.local\"),\n      license=openapi.License(name=\"BSD License\"),\n   ),\n   public=True,",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"admin/\", admin.site.urls),\n    path('api-auth/', include('rest_framework.urls')),\n    path('mainapp/', include('mainapp.urls')),\n    path('userapp/', include('userapp.urls')),\n    path('finance/', include('finance.urls')),\n    path('swagger/', schema_view.with_ui('swagger', cache_timeout=0), name='schema-swagger-ui'),\n    path('redoc/', schema_view.with_ui('redoc', cache_timeout=0), name='schema-redoc'),\n]",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "config.wsgi",
        "description": "config.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "config.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "finance.migrations.0001_initial",
        "description": "finance.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        (\"mainapp\", \"0001_initial\"),\n        (\"userapp\", \"0001_initial\"),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"Area\",\n            fields=[",
        "detail": "finance.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "finance.migrations.0002_area_slug_expenses_slug_income_slug",
        "description": "finance.migrations.0002_area_slug_expenses_slug_income_slug",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"finance\", \"0001_initial\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"area\",\n            name=\"slug\",\n            field=autoslug.fields.AutoSlugField(\n                default=1, editable=False, populate_from=\"name\", unique=True",
        "detail": "finance.migrations.0002_area_slug_expenses_slug_income_slug",
        "documentation": {}
    },
    {
        "label": "ExpensesAdmin",
        "kind": 6,
        "importPath": "finance.admin",
        "description": "finance.admin",
        "peekOfCode": "class ExpensesAdmin(admin.ModelAdmin):\n    list_display = ('name', 'amount', 'branch', 'created_at')\n    list_filter = ('branch', 'created_at')\n@admin.register(Payment)\nclass PaymentAdmin(admin.ModelAdmin):\n    list_display = ('branch', 'group', 'student', 'month', 'amount')\n    list_filter = ('branch', 'group', 'month', 'created_at')\n@admin.register(Area)\nclass AreaAdmin(admin.ModelAdmin):\n    list_display = ('name', 'status', 'created_at')",
        "detail": "finance.admin",
        "documentation": {}
    },
    {
        "label": "PaymentAdmin",
        "kind": 6,
        "importPath": "finance.admin",
        "description": "finance.admin",
        "peekOfCode": "class PaymentAdmin(admin.ModelAdmin):\n    list_display = ('branch', 'group', 'student', 'month', 'amount')\n    list_filter = ('branch', 'group', 'month', 'created_at')\n@admin.register(Area)\nclass AreaAdmin(admin.ModelAdmin):\n    list_display = ('name', 'status', 'created_at')\n    list_filter = ('status', 'created_at')\n@admin.register(Income)\nclass IncomeAdmin(admin.ModelAdmin):\n    list_display = ('name', 'branch', 'area', 'amount', 'created_at')",
        "detail": "finance.admin",
        "documentation": {}
    },
    {
        "label": "AreaAdmin",
        "kind": 6,
        "importPath": "finance.admin",
        "description": "finance.admin",
        "peekOfCode": "class AreaAdmin(admin.ModelAdmin):\n    list_display = ('name', 'status', 'created_at')\n    list_filter = ('status', 'created_at')\n@admin.register(Income)\nclass IncomeAdmin(admin.ModelAdmin):\n    list_display = ('name', 'branch', 'area', 'amount', 'created_at')\n    list_filter = ('branch', 'area', 'created_at')",
        "detail": "finance.admin",
        "documentation": {}
    },
    {
        "label": "IncomeAdmin",
        "kind": 6,
        "importPath": "finance.admin",
        "description": "finance.admin",
        "peekOfCode": "class IncomeAdmin(admin.ModelAdmin):\n    list_display = ('name', 'branch', 'area', 'amount', 'created_at')\n    list_filter = ('branch', 'area', 'created_at')",
        "detail": "finance.admin",
        "documentation": {}
    },
    {
        "label": "FinanceConfig",
        "kind": 6,
        "importPath": "finance.apps",
        "description": "finance.apps",
        "peekOfCode": "class FinanceConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"finance\"",
        "detail": "finance.apps",
        "documentation": {}
    },
    {
        "label": "Expenses",
        "kind": 6,
        "importPath": "finance.models",
        "description": "finance.models",
        "peekOfCode": "class Expenses(models.Model):\n    \"\"\" Harajatlar modeli \"\"\"\n    name = models.CharField(max_length=250, verbose_name=\"Harajat nomi\")\n    slug  = AutoSlugField(populate_from=\"name\", unique=True)\n    amount = models.DecimalField(max_digits=10, decimal_places=2, verbose_name=\"Miqdori\")\n    comment = models.TextField(verbose_name=\"Izoh\")\n    branch = models.ForeignKey(Branch, on_delete=models.CASCADE, related_name=\"expenses\", verbose_name=\"Filial\")\n    status = models.BooleanField(default=True, verbose_name=\"Holati\")\n    created_at = models.DateTimeField(auto_now_add=True)\n    class Meta:",
        "detail": "finance.models",
        "documentation": {}
    },
    {
        "label": "Payment",
        "kind": 6,
        "importPath": "finance.models",
        "description": "finance.models",
        "peekOfCode": "class Payment(models.Model):\n    \"\"\" O'quvchining to'lov qilishi un model \"\"\"\n    branch = models.ForeignKey(Branch, on_delete=models.CASCADE, related_name='payments', verbose_name=\"Filial\")\n    group = models.ForeignKey(Group, on_delete=models.CASCADE, related_name=\"payments\", verbose_name=\"gruhi\")\n    student = models.ForeignKey(Student, on_delete=models.CASCADE, related_name=\"payments\", verbose_name=\"O'quvchi\")\n    month = models.CharField(max_length=25, choices=MONTH_NAME, verbose_name=\"Oylar\")\n    amount = models.DecimalField(max_digits=10, decimal_places=2, verbose_name=\"Miqdori\")\n    status = models.BooleanField(default=True, verbose_name=\"Holati\")\n    created_at = models.DateTimeField(auto_now_add=True)\n    class Meta:",
        "detail": "finance.models",
        "documentation": {}
    },
    {
        "label": "Area",
        "kind": 6,
        "importPath": "finance.models",
        "description": "finance.models",
        "peekOfCode": "class Area(models.Model):\n    \"\"\" Kompaniyaning xizmat ko'rsatish turlari uchun model \"\"\"\n    name  = models.CharField(max_length=250, verbose_name=\"Nomi\")\n    slug  = AutoSlugField(populate_from=\"name\", unique=True)\n    status = models.BooleanField(default=True, verbose_name=\"Holati\")\n    created_at = models.DateTimeField(auto_now_add=True)\n    class Meta:\n        verbose_name = \"Hizmat\"\n        verbose_name_plural = \"Hizmatlar\"\n        ordering = ('-created_at',)",
        "detail": "finance.models",
        "documentation": {}
    },
    {
        "label": "Income",
        "kind": 6,
        "importPath": "finance.models",
        "description": "finance.models",
        "peekOfCode": "class Income(models.Model): \n    \"\"\" Daromadlar uchun model \"\"\"\n    name  = models.CharField(max_length=250, verbose_name=\"Nomi\")\n    slug  = AutoSlugField(populate_from=\"name\", unique=True)\n    branch = models.ForeignKey(Branch, on_delete=models.CASCADE, related_name='incoms', verbose_name=\"Filial\")\n    area = models.ForeignKey(Area, on_delete=models.CASCADE, related_name='incoms', verbose_name=\"Xizmat turi\")\n    amount = models.DecimalField(max_digits=10, decimal_places=2, verbose_name=\"Miqdori\")\n    comment = models.TextField(verbose_name=\"Izoh\")\n    status = models.BooleanField(default=True, verbose_name=\"Holati\")\n    created_at = models.DateTimeField(auto_now_add=True)",
        "detail": "finance.models",
        "documentation": {}
    },
    {
        "label": "MONTH_NAME",
        "kind": 5,
        "importPath": "finance.models",
        "description": "finance.models",
        "peekOfCode": "MONTH_NAME = (\n        ('yan', \"Yanvar\"),\n        ('fev', \"Fevral\"),\n        ('mar', \"Mart\"),\n        ('apr', \"Aprel\"),\n        ('may', \"May\"),\n        ('iyn', \"Iyun\"),\n        ('iyl', \"Iyul\"),\n        ('avg', \"Avgust\"),\n        ('sen', \"Sen\"),",
        "detail": "finance.models",
        "documentation": {}
    },
    {
        "label": "ExpensesSerializer",
        "kind": 6,
        "importPath": "finance.serializers",
        "description": "finance.serializers",
        "peekOfCode": "class ExpensesSerializer(ModelSerializer):\n    class Meta:\n        model = Expenses\n        fields = ('__all__')\nclass PaymentSerializer(ModelSerializer):\n    class Meta:\n        model = Payment\n        fields = ('__all__')\nclass AreaSerializer(ModelSerializer):\n    class Meta:",
        "detail": "finance.serializers",
        "documentation": {}
    },
    {
        "label": "PaymentSerializer",
        "kind": 6,
        "importPath": "finance.serializers",
        "description": "finance.serializers",
        "peekOfCode": "class PaymentSerializer(ModelSerializer):\n    class Meta:\n        model = Payment\n        fields = ('__all__')\nclass AreaSerializer(ModelSerializer):\n    class Meta:\n        model = Area\n        fields = ('__all__')\nclass IncomeSerializer(ModelSerializer):\n    class Meta:",
        "detail": "finance.serializers",
        "documentation": {}
    },
    {
        "label": "AreaSerializer",
        "kind": 6,
        "importPath": "finance.serializers",
        "description": "finance.serializers",
        "peekOfCode": "class AreaSerializer(ModelSerializer):\n    class Meta:\n        model = Area\n        fields = ('__all__')\nclass IncomeSerializer(ModelSerializer):\n    class Meta:\n        model = Income\n        fields = ('__all__')\n\"\"\" API \"\"\"\nclass ExpensesAPISerializer(ModelSerializer):",
        "detail": "finance.serializers",
        "documentation": {}
    },
    {
        "label": "IncomeSerializer",
        "kind": 6,
        "importPath": "finance.serializers",
        "description": "finance.serializers",
        "peekOfCode": "class IncomeSerializer(ModelSerializer):\n    class Meta:\n        model = Income\n        fields = ('__all__')\n\"\"\" API \"\"\"\nclass ExpensesAPISerializer(ModelSerializer):\n    branch_name = serializers.CharField(source='branch.name')\n    branch_slug = serializers.CharField(source='branch.slug')\n    class Meta:\n        model = Expenses",
        "detail": "finance.serializers",
        "documentation": {}
    },
    {
        "label": "ExpensesAPISerializer",
        "kind": 6,
        "importPath": "finance.serializers",
        "description": "finance.serializers",
        "peekOfCode": "class ExpensesAPISerializer(ModelSerializer):\n    branch_name = serializers.CharField(source='branch.name')\n    branch_slug = serializers.CharField(source='branch.slug')\n    class Meta:\n        model = Expenses\n        fields = ('id', 'name', 'slug', 'amount', 'comment',\\\n                  'branch', 'branch_name', 'branch_slug')\nclass PaymentAPISerializer(ModelSerializer):\n    branch_name = serializers.CharField(source='branch.name')\n    branch_slug = serializers.CharField(source='branch.slug')",
        "detail": "finance.serializers",
        "documentation": {}
    },
    {
        "label": "PaymentAPISerializer",
        "kind": 6,
        "importPath": "finance.serializers",
        "description": "finance.serializers",
        "peekOfCode": "class PaymentAPISerializer(ModelSerializer):\n    branch_name = serializers.CharField(source='branch.name')\n    branch_slug = serializers.CharField(source='branch.slug')\n    group_name = serializers.CharField(source='group.name')\n    group_slug = serializers.CharField(source='group.slug')\n    student_name = serializers.CharField(source='student.full_name')\n    student_slug = serializers.CharField(source='student.slug')\n    class Meta:\n        model = Payment\n        fields = ('id', 'month', 'amount', ",
        "detail": "finance.serializers",
        "documentation": {}
    },
    {
        "label": "IncomeAPISerializer",
        "kind": 6,
        "importPath": "finance.serializers",
        "description": "finance.serializers",
        "peekOfCode": "class IncomeAPISerializer(ModelSerializer):\n    branch_name = serializers.CharField(source='branch.name')\n    branch_slug = serializers.CharField(source='branch.slug')\n    area_name = serializers.CharField(source='area.name')\n    area_slug = serializers.CharField(source='area.slug')\n    class Meta:\n        model = Income\n        fields = ('id', 'name', 'amount', 'comment', \n                    'branch', 'branch_name', 'branch_slug',\n                    'area', 'area_name', 'area_slug',",
        "detail": "finance.serializers",
        "documentation": {}
    },
    {
        "label": "AreaAPISerializer",
        "kind": 6,
        "importPath": "finance.serializers",
        "description": "finance.serializers",
        "peekOfCode": "class AreaAPISerializer(ModelSerializer):\n    incoms = IncomeAPISerializer(many=True, read_only=True)\n    class Meta:\n        model = Area\n        fields = ('id', 'name', 'slug', 'incoms')",
        "detail": "finance.serializers",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "finance.urls",
        "description": "finance.urls",
        "peekOfCode": "router = DefaultRouter()\nrouter.register(r'expenses', ExpensesViewsets)\nrouter.register(r'payment', PaymentViewsets)\nrouter.register(r'area', AreaViewsets)\nrouter.register(r'income', IncomeViewsets)\nrouter.register(r'expenses-api', ExpensesAPIViewsets)\nrouter.register(r'payment-api', PaymentAPIViewsets)\nrouter.register(r'area-api', AreaAPIViewsets)\nrouter.register(r'income-api', IncomeAPIViewsets)\nurlpatterns = [",
        "detail": "finance.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "finance.urls",
        "description": "finance.urls",
        "peekOfCode": "urlpatterns = [\n    path('', include(router.urls)),\n]",
        "detail": "finance.urls",
        "documentation": {}
    },
    {
        "label": "ExpensesViewsets",
        "kind": 6,
        "importPath": "finance.views",
        "description": "finance.views",
        "peekOfCode": "class ExpensesViewsets(ModelViewSet):\n    queryset =  Expenses.objects.all()\n    serializer_class = ExpensesSerializer\n    permission_classes= [AllowAny]\n    lookup_field = 'slug'\nclass PaymentViewsets(ModelViewSet):\n    queryset =  Payment.objects.all()\n    serializer_class = PaymentSerializer\n    permission_classes= [AllowAny]\nclass AreaViewsets(ModelViewSet):",
        "detail": "finance.views",
        "documentation": {}
    },
    {
        "label": "PaymentViewsets",
        "kind": 6,
        "importPath": "finance.views",
        "description": "finance.views",
        "peekOfCode": "class PaymentViewsets(ModelViewSet):\n    queryset =  Payment.objects.all()\n    serializer_class = PaymentSerializer\n    permission_classes= [AllowAny]\nclass AreaViewsets(ModelViewSet):\n    queryset =  Area.objects.all()\n    serializer_class = AreaSerializer\n    permission_classes= [AllowAny]\n    lookup_field = 'slug'\nclass IncomeViewsets(ModelViewSet):",
        "detail": "finance.views",
        "documentation": {}
    },
    {
        "label": "AreaViewsets",
        "kind": 6,
        "importPath": "finance.views",
        "description": "finance.views",
        "peekOfCode": "class AreaViewsets(ModelViewSet):\n    queryset =  Area.objects.all()\n    serializer_class = AreaSerializer\n    permission_classes= [AllowAny]\n    lookup_field = 'slug'\nclass IncomeViewsets(ModelViewSet):\n    queryset =  Income.objects.all()\n    serializer_class = IncomeSerializer\n    permission_classes= [AllowAny]\n    lookup_field = 'slug'",
        "detail": "finance.views",
        "documentation": {}
    },
    {
        "label": "IncomeViewsets",
        "kind": 6,
        "importPath": "finance.views",
        "description": "finance.views",
        "peekOfCode": "class IncomeViewsets(ModelViewSet):\n    queryset =  Income.objects.all()\n    serializer_class = IncomeSerializer\n    permission_classes= [AllowAny]\n    lookup_field = 'slug'\n\"\"\" API \"\"\"\nclass ExpensesAPIViewsets(ModelViewSet):\n    queryset =  Expenses.objects.all()\n    serializer_class = ExpensesAPISerializer\n    permission_classes = [AllowAny]",
        "detail": "finance.views",
        "documentation": {}
    },
    {
        "label": "ExpensesAPIViewsets",
        "kind": 6,
        "importPath": "finance.views",
        "description": "finance.views",
        "peekOfCode": "class ExpensesAPIViewsets(ModelViewSet):\n    queryset =  Expenses.objects.all()\n    serializer_class = ExpensesAPISerializer\n    permission_classes = [AllowAny]\n    lookup_field = 'slug'\nclass PaymentAPIViewsets(ModelViewSet):\n    queryset =  Payment.objects.all()\n    serializer_class = PaymentAPISerializer\n    permission_classes= [AllowAny]\nclass AreaAPIViewsets(ModelViewSet):",
        "detail": "finance.views",
        "documentation": {}
    },
    {
        "label": "PaymentAPIViewsets",
        "kind": 6,
        "importPath": "finance.views",
        "description": "finance.views",
        "peekOfCode": "class PaymentAPIViewsets(ModelViewSet):\n    queryset =  Payment.objects.all()\n    serializer_class = PaymentAPISerializer\n    permission_classes= [AllowAny]\nclass AreaAPIViewsets(ModelViewSet):\n    queryset =  Area.objects.all()\n    serializer_class = AreaAPISerializer\n    permission_classes= [AllowAny]\n    lookup_field = 'slug'\nclass IncomeAPIViewsets(ModelViewSet):",
        "detail": "finance.views",
        "documentation": {}
    },
    {
        "label": "AreaAPIViewsets",
        "kind": 6,
        "importPath": "finance.views",
        "description": "finance.views",
        "peekOfCode": "class AreaAPIViewsets(ModelViewSet):\n    queryset =  Area.objects.all()\n    serializer_class = AreaAPISerializer\n    permission_classes= [AllowAny]\n    lookup_field = 'slug'\nclass IncomeAPIViewsets(ModelViewSet):\n    queryset =  Income.objects.all()\n    serializer_class = IncomeAPISerializer\n    permission_classes= [AllowAny]\n    lookup_field = 'slug'",
        "detail": "finance.views",
        "documentation": {}
    },
    {
        "label": "IncomeAPIViewsets",
        "kind": 6,
        "importPath": "finance.views",
        "description": "finance.views",
        "peekOfCode": "class IncomeAPIViewsets(ModelViewSet):\n    queryset =  Income.objects.all()\n    serializer_class = IncomeAPISerializer\n    permission_classes= [AllowAny]\n    lookup_field = 'slug'",
        "detail": "finance.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "mainapp.migrations.0001_initial",
        "description": "mainapp.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        (\"userapp\", \"__first__\"),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"Branch\",\n            fields=[\n                (",
        "detail": "mainapp.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "mainapp.migrations.0002_alter_room_branch",
        "description": "mainapp.migrations.0002_alter_room_branch",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"mainapp\", \"0001_initial\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"room\",\n            name=\"branch\",\n            field=models.ForeignKey(\n                blank=True,",
        "detail": "mainapp.migrations.0002_alter_room_branch",
        "documentation": {}
    },
    {
        "label": "BranchAdmin",
        "kind": 6,
        "importPath": "mainapp.admin",
        "description": "mainapp.admin",
        "peekOfCode": "class BranchAdmin(admin.ModelAdmin):\n    list_display = (\"name\", 'id', \"adress\", \"status\", \"created_at\",)\n    list_filter = (\"status\", \"created_at\")\n    list_editable = (\"status\",)\n@admin.register(Room)\nclass RoomAdmin(admin.ModelAdmin):\n    list_display = (\"number\", 'id', 'slug', 'branch', \"capacity\", \"status\", \"created_at\")\n    list_filter = (\"branch\", 'capacity', 'status', 'created_at')\n    list_editable = (\"status\",\"capacity\")\n@admin.register(Group)",
        "detail": "mainapp.admin",
        "documentation": {}
    },
    {
        "label": "RoomAdmin",
        "kind": 6,
        "importPath": "mainapp.admin",
        "description": "mainapp.admin",
        "peekOfCode": "class RoomAdmin(admin.ModelAdmin):\n    list_display = (\"number\", 'id', 'slug', 'branch', \"capacity\", \"status\", \"created_at\")\n    list_filter = (\"branch\", 'capacity', 'status', 'created_at')\n    list_editable = (\"status\",\"capacity\")\n@admin.register(Group)\nclass GroupAdmin(admin.ModelAdmin):\n    list_display = ('name', 'id', 'branch', 'field', 'teacher', 'day', 'time', 'status')\n    list_filter  = ('branch', 'field', 'teacher', 'day','time', 'status', 'created_at')\n    list_editable = ('status', 'day', 'time')",
        "detail": "mainapp.admin",
        "documentation": {}
    },
    {
        "label": "GroupAdmin",
        "kind": 6,
        "importPath": "mainapp.admin",
        "description": "mainapp.admin",
        "peekOfCode": "class GroupAdmin(admin.ModelAdmin):\n    list_display = ('name', 'id', 'branch', 'field', 'teacher', 'day', 'time', 'status')\n    list_filter  = ('branch', 'field', 'teacher', 'day','time', 'status', 'created_at')\n    list_editable = ('status', 'day', 'time')",
        "detail": "mainapp.admin",
        "documentation": {}
    },
    {
        "label": "MainappConfig",
        "kind": 6,
        "importPath": "mainapp.apps",
        "description": "mainapp.apps",
        "peekOfCode": "class MainappConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"mainapp\"",
        "detail": "mainapp.apps",
        "documentation": {}
    },
    {
        "label": "Branch",
        "kind": 6,
        "importPath": "mainapp.models",
        "description": "mainapp.models",
        "peekOfCode": "class Branch(models.Model):\n    \"\"\" Branch - ushbu model Filiallar uchun yaratilgan.\"\"\"\n    name  = models.CharField(max_length=100, unique=True, verbose_name=\"Nomi\")\n    slug  = AutoSlugField(populate_from=\"name\", unique=True)\n    adress = models.CharField(max_length=250, verbose_name=\"Manzil\")\n    status = models.BooleanField(default=True, verbose_name=\"Holati\")\n    created_at = models.DateTimeField(auto_now_add=True)\n    class Meta:\n        verbose_name = \"Filial\"\n        verbose_name_plural = \"Filiallar\"",
        "detail": "mainapp.models",
        "documentation": {}
    },
    {
        "label": "Room",
        "kind": 6,
        "importPath": "mainapp.models",
        "description": "mainapp.models",
        "peekOfCode": "class Room(models.Model):\n    \"\"\" Room - Har bir Filialdagi xonalar uchun madel \"\"\"\n    number = models.PositiveIntegerField(verbose_name=\"Raqami\", default=1)\n    branch = models.ForeignKey(Branch, on_delete=models.CASCADE, verbose_name=\"Filial\", related_name=\"rooms\")\n    # slug  = AutoSlugField(populate_from=\"number-branch\", unique=True)\n    slug = AutoSlugField(\n        (u'slug'),\n        populate_from=slugify_two_fields,\n        unique=True\n    )",
        "detail": "mainapp.models",
        "documentation": {}
    },
    {
        "label": "Group",
        "kind": 6,
        "importPath": "mainapp.models",
        "description": "mainapp.models",
        "peekOfCode": "class Group(models.Model):\n    field = models.ForeignKey(Field, on_delete=models.CASCADE, \n                              related_name='groups', verbose_name=\"Kurs\")\n    name = models.CharField(max_length=50, verbose_name=\"Nomi\")\n    slug  = AutoSlugField(populate_from=\"name\", unique=True)\n    teacher = models.ForeignKey(Worker, on_delete=models.CASCADE, related_name='groups', \n                                verbose_name=\"O'qtuvchi\")\n    students = models.ManyToManyField(Student, related_name=\"students\", \n                                      verbose_name=\"O'quvchilar\")\n    day = models.CharField(max_length=25, choices=DAYS, default='toq')",
        "detail": "mainapp.models",
        "documentation": {}
    },
    {
        "label": "slugify_two_fields",
        "kind": 2,
        "importPath": "mainapp.models",
        "description": "mainapp.models",
        "peekOfCode": "def slugify_two_fields(self):\n        \"\"\" Ikkita maydonni sludada birlashtirish \"\"\"\n        return \"{}-{}\".format(self.branch.name, self.number)\nclass Room(models.Model):\n    \"\"\" Room - Har bir Filialdagi xonalar uchun madel \"\"\"\n    number = models.PositiveIntegerField(verbose_name=\"Raqami\", default=1)\n    branch = models.ForeignKey(Branch, on_delete=models.CASCADE, verbose_name=\"Filial\", related_name=\"rooms\")\n    # slug  = AutoSlugField(populate_from=\"number-branch\", unique=True)\n    slug = AutoSlugField(\n        (u'slug'),",
        "detail": "mainapp.models",
        "documentation": {}
    },
    {
        "label": "BranchSerializer",
        "kind": 6,
        "importPath": "mainapp.serializers",
        "description": "mainapp.serializers",
        "peekOfCode": "class BranchSerializer(serializers.ModelSerializer):\n    class Meta:\n        model  = Branch\n        fields = ('__all__')\nclass RoomSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Room\n        fields = ('__all__')\nclass GroupSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "mainapp.serializers",
        "documentation": {}
    },
    {
        "label": "RoomSerializer",
        "kind": 6,
        "importPath": "mainapp.serializers",
        "description": "mainapp.serializers",
        "peekOfCode": "class RoomSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Room\n        fields = ('__all__')\nclass GroupSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Group\n        fields  =('__all__')\n\"\"\" API \"\"\"\nclass GroupAPISerializer(serializers.ModelSerializer):",
        "detail": "mainapp.serializers",
        "documentation": {}
    },
    {
        "label": "GroupSerializer",
        "kind": 6,
        "importPath": "mainapp.serializers",
        "description": "mainapp.serializers",
        "peekOfCode": "class GroupSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Group\n        fields  =('__all__')\n\"\"\" API \"\"\"\nclass GroupAPISerializer(serializers.ModelSerializer):\n    branch_name = serializers.CharField(source='branch.name')\n    branch_slug = serializers.CharField(source='branch.slug')\n    field_name = serializers.CharField(source='field.name')\n    field_slug = serializers.CharField(source='field.slug')",
        "detail": "mainapp.serializers",
        "documentation": {}
    },
    {
        "label": "GroupAPISerializer",
        "kind": 6,
        "importPath": "mainapp.serializers",
        "description": "mainapp.serializers",
        "peekOfCode": "class GroupAPISerializer(serializers.ModelSerializer):\n    branch_name = serializers.CharField(source='branch.name')\n    branch_slug = serializers.CharField(source='branch.slug')\n    field_name = serializers.CharField(source='field.name')\n    field_slug = serializers.CharField(source='field.slug')\n    room_number = serializers.IntegerField(source='room.number')\n    room_slug = serializers.CharField(source='room.slug')\n    teacher_name = serializers.CharField(source='teacher.full_name')\n    teacher_slug = serializers.CharField(source='teacher.slug')\n    payments = PaymentAPISerializer(many=True, read_only=True)",
        "detail": "mainapp.serializers",
        "documentation": {}
    },
    {
        "label": "RoomAPISerializer",
        "kind": 6,
        "importPath": "mainapp.serializers",
        "description": "mainapp.serializers",
        "peekOfCode": "class RoomAPISerializer(serializers.ModelSerializer):\n    branch_name = serializers.CharField(source='branch.name')\n    groups  = GroupAPISerializer(many=True, read_only=True)\n    class Meta:\n        model = Room\n        fields = ('id', 'number', 'capacity', 'branch_name', 'groups')\nclass BranchAPISerializer(serializers.ModelSerializer):\n    groups = GroupAPISerializer(many=True, read_only=True)\n    rooms = RoomAPISerializer(many=True, read_only=True)\n    expenses = ExpensesAPISerializer(many=True, read_only=True)",
        "detail": "mainapp.serializers",
        "documentation": {}
    },
    {
        "label": "BranchAPISerializer",
        "kind": 6,
        "importPath": "mainapp.serializers",
        "description": "mainapp.serializers",
        "peekOfCode": "class BranchAPISerializer(serializers.ModelSerializer):\n    groups = GroupAPISerializer(many=True, read_only=True)\n    rooms = RoomAPISerializer(many=True, read_only=True)\n    expenses = ExpensesAPISerializer(many=True, read_only=True)\n    incoms = IncomeAPISerializer(many=True, read_only=True)\n    payments = PaymentAPISerializer(many=True, read_only=True)\n    class Meta:\n        model = Branch\n        fields = ('id','name','slug','adress','groups','rooms',\n                  'expenses','incoms','payments')",
        "detail": "mainapp.serializers",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "mainapp.urls",
        "description": "mainapp.urls",
        "peekOfCode": "router = routers.DefaultRouter()\nrouter.register(r'branch', BranchViewset, 'branch')\nrouter.register(r'room', RoomViewset, 'room')\nrouter.register(r'group', Groupviewset, 'group')\nurlpatterns = [\n    path('', include(router.urls)),\n    path('branch-api/<slug:slug>/', BranchAPIDetailview.as_view()),\n    # path('branch-api/<int:id>/', BranchAPIDetailview.as_view()),\n    path('branch-api/', BranchAPIListview.as_view()),\n    path('room-api/', RoomAPIListview.as_view()),",
        "detail": "mainapp.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "mainapp.urls",
        "description": "mainapp.urls",
        "peekOfCode": "urlpatterns = [\n    path('', include(router.urls)),\n    path('branch-api/<slug:slug>/', BranchAPIDetailview.as_view()),\n    # path('branch-api/<int:id>/', BranchAPIDetailview.as_view()),\n    path('branch-api/', BranchAPIListview.as_view()),\n    path('room-api/', RoomAPIListview.as_view()),\n    path('group-api/', GroupAPIListview.as_view()),\n]",
        "detail": "mainapp.urls",
        "documentation": {}
    },
    {
        "label": "BranchViewset",
        "kind": 6,
        "importPath": "mainapp.views",
        "description": "mainapp.views",
        "peekOfCode": "class BranchViewset(viewsets.ModelViewSet):\n    queryset = Branch.objects.all()\n    serializer_class = BranchSerializer\n    permission_classes = [AllowAny]\n    lookup_field = 'slug'\n    filter_backends = [filters.SearchFilter]\n    filterset_fields = ['status','name', 'id']\n    search_fields = ['name', 'adress']\n    \"\"\" CRUD functions \"\"\"\n    def create(self, request, *args, **kwargs):",
        "detail": "mainapp.views",
        "documentation": {}
    },
    {
        "label": "RoomViewset",
        "kind": 6,
        "importPath": "mainapp.views",
        "description": "mainapp.views",
        "peekOfCode": "class RoomViewset(viewsets.ModelViewSet):\n    queryset = Room.objects.all()\n    serializer_class = RoomSerializer\n    permission_classes = [AllowAny]\n    lookup_field = 'slug'\n    def create(self, request, *args, **kwargs):\n        request_data = request.data\n        try:\n            branch = Branch.objects.get(id=int(request_data['branch']))\n        except:",
        "detail": "mainapp.views",
        "documentation": {}
    },
    {
        "label": "Groupviewset",
        "kind": 6,
        "importPath": "mainapp.views",
        "description": "mainapp.views",
        "peekOfCode": "class Groupviewset(viewsets.ModelViewSet):\n    queryset = Group.objects.all()\n    serializer_class = GroupSerializer\n    permission_classes = [AllowAny]\n    lookup_field = 'slug'\n\"\"\" API \"\"\"\nclass BranchAPIListview(ListAPIView):\n    queryset = Branch.objects.filter(status=True)\n    serializer_class = BranchAPISerializer\n    permission_classes = [AllowAny]",
        "detail": "mainapp.views",
        "documentation": {}
    },
    {
        "label": "BranchAPIListview",
        "kind": 6,
        "importPath": "mainapp.views",
        "description": "mainapp.views",
        "peekOfCode": "class BranchAPIListview(ListAPIView):\n    queryset = Branch.objects.filter(status=True)\n    serializer_class = BranchAPISerializer\n    permission_classes = [AllowAny]\nclass BranchAPIDetailview(RetrieveAPIView):\n    queryset = Branch.objects.filter(status=True)\n    serializer_class = BranchAPISerializer\n    permission_classes = [AllowAny] \n    lookup_field = 'slug'\n    # lookup_field = 'id'",
        "detail": "mainapp.views",
        "documentation": {}
    },
    {
        "label": "BranchAPIDetailview",
        "kind": 6,
        "importPath": "mainapp.views",
        "description": "mainapp.views",
        "peekOfCode": "class BranchAPIDetailview(RetrieveAPIView):\n    queryset = Branch.objects.filter(status=True)\n    serializer_class = BranchAPISerializer\n    permission_classes = [AllowAny] \n    lookup_field = 'slug'\n    # lookup_field = 'id'\nclass RoomAPIListview(ListAPIView):\n    queryset = Room.objects.filter(status=True)\n    serializer_class = RoomAPISerializer\n    permission_classes = [AllowAny]",
        "detail": "mainapp.views",
        "documentation": {}
    },
    {
        "label": "RoomAPIListview",
        "kind": 6,
        "importPath": "mainapp.views",
        "description": "mainapp.views",
        "peekOfCode": "class RoomAPIListview(ListAPIView):\n    queryset = Room.objects.filter(status=True)\n    serializer_class = RoomAPISerializer\n    permission_classes = [AllowAny]\nclass GroupAPIListview(ListAPIView):\n    queryset = Group.objects.filter(status=True)\n    serializer_class = GroupAPISerializer\n    permission_classes = [AllowAny]",
        "detail": "mainapp.views",
        "documentation": {}
    },
    {
        "label": "GroupAPIListview",
        "kind": 6,
        "importPath": "mainapp.views",
        "description": "mainapp.views",
        "peekOfCode": "class GroupAPIListview(ListAPIView):\n    queryset = Group.objects.filter(status=True)\n    serializer_class = GroupAPISerializer\n    permission_classes = [AllowAny]",
        "detail": "mainapp.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "userapp.migrations.0001_initial",
        "description": "userapp.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = []\n    operations = [\n        migrations.CreateModel(\n            name=\"Field\",\n            fields=[\n                (\n                    \"id\",\n                    models.BigAutoField(",
        "detail": "userapp.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "FieldAdmin",
        "kind": 6,
        "importPath": "userapp.admin",
        "description": "userapp.admin",
        "peekOfCode": "class FieldAdmin(admin.ModelAdmin):\n    list_display = (\"name\", 'id', \"cost\", \"duration\", \"status\", \"created_at\")\n    list_filter = (\"duration\", \"status\", \"created_at\")\n    list_editable = (\"status\",)\n@admin.register(Role)\nclass Role(admin.ModelAdmin):\n    list_display = ('name', 'status',)\n    list_editable = ('status',)\n@admin.register(Worker)\nclass Worker(admin.ModelAdmin):",
        "detail": "userapp.admin",
        "documentation": {}
    },
    {
        "label": "Role",
        "kind": 6,
        "importPath": "userapp.admin",
        "description": "userapp.admin",
        "peekOfCode": "class Role(admin.ModelAdmin):\n    list_display = ('name', 'status',)\n    list_editable = ('status',)\n@admin.register(Worker)\nclass Worker(admin.ModelAdmin):\n    list_display = ('full_name', 'role', 'status',)\n    list_filter = ('status', 'role',)\n    list_editable = ('status', 'role',)\n@admin.register(Student)\nclass Student(admin.ModelAdmin):",
        "detail": "userapp.admin",
        "documentation": {}
    },
    {
        "label": "Worker",
        "kind": 6,
        "importPath": "userapp.admin",
        "description": "userapp.admin",
        "peekOfCode": "class Worker(admin.ModelAdmin):\n    list_display = ('full_name', 'role', 'status',)\n    list_filter = ('status', 'role',)\n    list_editable = ('status', 'role',)\n@admin.register(Student)\nclass Student(admin.ModelAdmin):\n    list_display = ('full_name', 'field', 'day', 'time', 'status',)\n    list_filter = ('status', 'field', 'day', 'time',)\n    list_editable = ('status',)",
        "detail": "userapp.admin",
        "documentation": {}
    },
    {
        "label": "Student",
        "kind": 6,
        "importPath": "userapp.admin",
        "description": "userapp.admin",
        "peekOfCode": "class Student(admin.ModelAdmin):\n    list_display = ('full_name', 'field', 'day', 'time', 'status',)\n    list_filter = ('status', 'field', 'day', 'time',)\n    list_editable = ('status',)",
        "detail": "userapp.admin",
        "documentation": {}
    },
    {
        "label": "UserappConfig",
        "kind": 6,
        "importPath": "userapp.apps",
        "description": "userapp.apps",
        "peekOfCode": "class UserappConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"userapp\"",
        "detail": "userapp.apps",
        "documentation": {}
    },
    {
        "label": "Field",
        "kind": 6,
        "importPath": "userapp.models",
        "description": "userapp.models",
        "peekOfCode": "class Field(models.Model):\n    \"\"\" Field modeli - o'quv markazdagi yo'nalish(kurs)larni aniqlsh uchun yaratilgan. M: Backend, Frontend, 3D, ...\"\"\"\n    name  = models.CharField(max_length=100, unique=True, verbose_name=\"Nomi\")\n    slug  = AutoSlugField(populate_from=\"name\", unique=True)\n    cost = models.DecimalField(max_digits=8, decimal_places=2, default=100000, blank=True, null=True, verbose_name=\"Narxi\")\n    duration = models.PositiveIntegerField(default=6, verbose_name=\"Kurs davomiyligi\")\n    status = models.BooleanField(default=True, verbose_name=\"Holati\")\n    created_at = models.DateTimeField(auto_now_add=True)\n    class Meta:\n        verbose_name = \"Kurs\"",
        "detail": "userapp.models",
        "documentation": {}
    },
    {
        "label": "Role",
        "kind": 6,
        "importPath": "userapp.models",
        "description": "userapp.models",
        "peekOfCode": "class Role(models.Model):\n    \"\"\" Role - xodimlarning vazifasini yaratuvchi model \"\"\"\n    name = models.CharField(max_length=50, verbose_name=\"Vazifasi nomi\")\n    slug  = AutoSlugField(populate_from=\"name\", unique=True)\n    status = models.BooleanField(default=True, verbose_name=\"Holati\")\n    created_at = models.DateTimeField(auto_now_add=True)\n    def __str__(self):\n        return self.name\nclass Worker(models.Model):\n    \"\"\" Worker - xodimlar uchun model \"\"\"",
        "detail": "userapp.models",
        "documentation": {}
    },
    {
        "label": "Worker",
        "kind": 6,
        "importPath": "userapp.models",
        "description": "userapp.models",
        "peekOfCode": "class Worker(models.Model):\n    \"\"\" Worker - xodimlar uchun model \"\"\"\n    full_name = models.CharField(max_length=100, verbose_name=\"Ism familya\")\n    slug  = AutoSlugField(populate_from=\"full_name\", unique=True)\n    role = models.ForeignKey(Role, on_delete=models.CASCADE, verbose_name=\"Vazifasi\", related_name=\"workers\")\n    diriction = models.ForeignKey(Field, on_delete=models.CASCADE, verbose_name=\"O'qtuvchining yo'nalishi\", related_name=\"workers\")\n    phone_number = models.CharField(max_length=12, validators=[_validate_phone], verbose_name=\"tel. raqam\", unique=True)\n    passport = models.CharField(max_length=15, verbose_name=\"Passport\", unique=True)\n    # percentage - ishchining maoshi foizga nisbatan hisoblansa\n    percentage = models.PositiveIntegerField(default=10, verbose_name=\"Ishchining foizi\", blank=True, null=True)",
        "detail": "userapp.models",
        "documentation": {}
    },
    {
        "label": "Student",
        "kind": 6,
        "importPath": "userapp.models",
        "description": "userapp.models",
        "peekOfCode": "class Student(models.Model):\n    \"\"\" O'quvchilar uchun model \"\"\"\n    full_name = models.CharField(max_length=100, verbose_name=\"Ismi\")\n    slug  = AutoSlugField(populate_from=\"full_name\", unique=True)\n    date_of_birth = models.DateField(verbose_name=\"Tug'ilgan sanasi\")\n    passport = models.CharField(max_length=15, verbose_name=\"Passport\", unique=True)\n    phone_number = models.CharField(max_length=12, validators=[_validate_phone], verbose_name=\"tel. raqam\", unique=True)\n    father_name = models.CharField(max_length=100, verbose_name=\"otasining ismi\")\n    father_phone = models.CharField(max_length=12, validators=[_validate_phone], verbose_name=\"tel. raqam\", unique=True)\n    # field - o'qish yo'nalishi ",
        "detail": "userapp.models",
        "documentation": {}
    },
    {
        "label": "_validate_phone",
        "kind": 5,
        "importPath": "userapp.models",
        "description": "userapp.models",
        "peekOfCode": "_validate_phone = RegexValidator(\n    regex=r\"^[\\+]?[9]{2}[8]?[0-9]{2}?[0-9]{3}?[0-9]{2}?[0-9]{2}$\",\n    message=\"Telefon raqamingiz 9 bilan boshlanishi va 12 belgidan oshmasligi lozim. Masalan: 998334568978\",\n)\nDAYS = (\n    (\"toq\",\"Du-Chor-Ju\"),\n    (\"juft\",\"Se-Pay-Shan\"),\n    (\"boot\",\"Bootcamp\"),\n)\nTIME = (",
        "detail": "userapp.models",
        "documentation": {}
    },
    {
        "label": "DAYS",
        "kind": 5,
        "importPath": "userapp.models",
        "description": "userapp.models",
        "peekOfCode": "DAYS = (\n    (\"toq\",\"Du-Chor-Ju\"),\n    (\"juft\",\"Se-Pay-Shan\"),\n    (\"boot\",\"Bootcamp\"),\n)\nTIME = (\n    ('8',\"8:00-11:00\"),\n    ('12',\"12:00-14:00\"),\n    ('14',\"14:00-17:00\"),\n)",
        "detail": "userapp.models",
        "documentation": {}
    },
    {
        "label": "TIME",
        "kind": 5,
        "importPath": "userapp.models",
        "description": "userapp.models",
        "peekOfCode": "TIME = (\n    ('8',\"8:00-11:00\"),\n    ('12',\"12:00-14:00\"),\n    ('14',\"14:00-17:00\"),\n)\nclass Field(models.Model):\n    \"\"\" Field modeli - o'quv markazdagi yo'nalish(kurs)larni aniqlsh uchun yaratilgan. M: Backend, Frontend, 3D, ...\"\"\"\n    name  = models.CharField(max_length=100, unique=True, verbose_name=\"Nomi\")\n    slug  = AutoSlugField(populate_from=\"name\", unique=True)\n    cost = models.DecimalField(max_digits=8, decimal_places=2, default=100000, blank=True, null=True, verbose_name=\"Narxi\")",
        "detail": "userapp.models",
        "documentation": {}
    },
    {
        "label": "FieldSerializer",
        "kind": 6,
        "importPath": "userapp.serializers",
        "description": "userapp.serializers",
        "peekOfCode": "class FieldSerializer(ModelSerializer):\n    class Meta:\n        model = Field\n        fields = ('__all__')\nclass RoleSerializer(ModelSerializer):\n    class Meta:\n        model = Role\n        fields = ('__all__')\nclass WorkerSerializer(ModelSerializer):\n    class Meta:",
        "detail": "userapp.serializers",
        "documentation": {}
    },
    {
        "label": "RoleSerializer",
        "kind": 6,
        "importPath": "userapp.serializers",
        "description": "userapp.serializers",
        "peekOfCode": "class RoleSerializer(ModelSerializer):\n    class Meta:\n        model = Role\n        fields = ('__all__')\nclass WorkerSerializer(ModelSerializer):\n    class Meta:\n        model = Worker\n        fields = ('__all__')\nclass StudentSerializer(ModelSerializer):\n    class Meta:",
        "detail": "userapp.serializers",
        "documentation": {}
    },
    {
        "label": "WorkerSerializer",
        "kind": 6,
        "importPath": "userapp.serializers",
        "description": "userapp.serializers",
        "peekOfCode": "class WorkerSerializer(ModelSerializer):\n    class Meta:\n        model = Worker\n        fields = ('__all__')\nclass StudentSerializer(ModelSerializer):\n    class Meta:\n        model = Student\n        fields = ('__all__')\n\"\"\" API \"\"\"\nclass WorkerAPISerializer(ModelSerializer):",
        "detail": "userapp.serializers",
        "documentation": {}
    },
    {
        "label": "StudentSerializer",
        "kind": 6,
        "importPath": "userapp.serializers",
        "description": "userapp.serializers",
        "peekOfCode": "class StudentSerializer(ModelSerializer):\n    class Meta:\n        model = Student\n        fields = ('__all__')\n\"\"\" API \"\"\"\nclass WorkerAPISerializer(ModelSerializer):\n    direction_name = serializers.CharField(source='diriction.name')\n    direction_slug = serializers.CharField(source='diriction.slug')\n    role_name = serializers.CharField(source='role.name')\n    role_slug = serializers.CharField(source='role.slug')",
        "detail": "userapp.serializers",
        "documentation": {}
    },
    {
        "label": "WorkerAPISerializer",
        "kind": 6,
        "importPath": "userapp.serializers",
        "description": "userapp.serializers",
        "peekOfCode": "class WorkerAPISerializer(ModelSerializer):\n    direction_name = serializers.CharField(source='diriction.name')\n    direction_slug = serializers.CharField(source='diriction.slug')\n    role_name = serializers.CharField(source='role.name')\n    role_slug = serializers.CharField(source='role.slug')\n    class Meta:\n        model = Worker\n        fields = ('id', 'full_name', 'slug', 'phone_number', 'passport', 'percentage', 'salary',\\\n                  'direction_name', 'direction_slug', 'role_name', 'role_slug')\nclass RoleAPISerializer(ModelSerializer):",
        "detail": "userapp.serializers",
        "documentation": {}
    },
    {
        "label": "RoleAPISerializer",
        "kind": 6,
        "importPath": "userapp.serializers",
        "description": "userapp.serializers",
        "peekOfCode": "class RoleAPISerializer(ModelSerializer):\n    workers = WorkerAPISerializer(many=True, read_only = True)\n    class Meta:\n        model = Role\n        fields = ('id', 'name', 'slug', 'workers')\nclass StudentAPISerializer(ModelSerializer):\n    field_name = serializers.CharField(source='field.name')\n    field_slug = serializers.CharField(source='field.slug')\n    class Meta:\n        model = Student",
        "detail": "userapp.serializers",
        "documentation": {}
    },
    {
        "label": "StudentAPISerializer",
        "kind": 6,
        "importPath": "userapp.serializers",
        "description": "userapp.serializers",
        "peekOfCode": "class StudentAPISerializer(ModelSerializer):\n    field_name = serializers.CharField(source='field.name')\n    field_slug = serializers.CharField(source='field.slug')\n    class Meta:\n        model = Student\n        fields = ('id', 'full_name', 'slug', 'date_of_birth', 'passport', 'phone_number', 'father_name', \\\n                  'father_phone', 'field_name', 'field_slug', 'day', 'time')\nclass FieldAPISerializer(ModelSerializer):\n    students = StudentAPISerializer(many=True, read_only=True)\n    workers = WorkerAPISerializer(many=True, read_only=True)",
        "detail": "userapp.serializers",
        "documentation": {}
    },
    {
        "label": "FieldAPISerializer",
        "kind": 6,
        "importPath": "userapp.serializers",
        "description": "userapp.serializers",
        "peekOfCode": "class FieldAPISerializer(ModelSerializer):\n    students = StudentAPISerializer(many=True, read_only=True)\n    workers = WorkerAPISerializer(many=True, read_only=True)\n    class Meta:\n        model = Field\n        fields = ('id', 'name', 'slug', 'cost', 'duration', 'students', 'workers')",
        "detail": "userapp.serializers",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "userapp.urls",
        "description": "userapp.urls",
        "peekOfCode": "router = DefaultRouter()\nrouter.register(r'field', FieldViewset)\nrouter.register(r'role', RoleViewset)\nrouter.register(r'worker', WorkerViewset)\nrouter.register(r'student', StudentViewset)\nrouter.register(r'field-api', FieldAPIViewset)\nrouter.register(r'role-api', RoleAPIViewset)\nrouter.register(r'worker-api', WorkerAPIViewset)\nrouter.register(r'student-api', StudentAPIViewset)\nurlpatterns = [",
        "detail": "userapp.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "userapp.urls",
        "description": "userapp.urls",
        "peekOfCode": "urlpatterns = [\n    path('', include(router.urls))\n]",
        "detail": "userapp.urls",
        "documentation": {}
    },
    {
        "label": "FieldViewset",
        "kind": 6,
        "importPath": "userapp.views",
        "description": "userapp.views",
        "peekOfCode": "class FieldViewset(ModelViewSet):\n    queryset = Field.objects.all()\n    serializer_class = FieldSerializer\n    permission_classes = [AllowAny]\n    lookup_field = 'slug'\nclass RoleViewset(ModelViewSet):\n    queryset = Role.objects.all()\n    serializer_class = RoleSerializer\n    permission_classes = [AllowAny]\n    lookup_field = 'slug'",
        "detail": "userapp.views",
        "documentation": {}
    },
    {
        "label": "RoleViewset",
        "kind": 6,
        "importPath": "userapp.views",
        "description": "userapp.views",
        "peekOfCode": "class RoleViewset(ModelViewSet):\n    queryset = Role.objects.all()\n    serializer_class = RoleSerializer\n    permission_classes = [AllowAny]\n    lookup_field = 'slug'\nclass WorkerViewset(ModelViewSet):\n    queryset = Worker.objects.all()\n    serializer_class = WorkerSerializer\n    permission_classes = [AllowAny]\n    lookup_field = 'slug'",
        "detail": "userapp.views",
        "documentation": {}
    },
    {
        "label": "WorkerViewset",
        "kind": 6,
        "importPath": "userapp.views",
        "description": "userapp.views",
        "peekOfCode": "class WorkerViewset(ModelViewSet):\n    queryset = Worker.objects.all()\n    serializer_class = WorkerSerializer\n    permission_classes = [AllowAny]\n    lookup_field = 'slug'\nclass StudentViewset(ModelViewSet):\n    queryset = Student.objects.all()\n    serializer_class = StudentSerializer\n    permission_classes = [AllowAny]\n    lookup_field = 'slug'",
        "detail": "userapp.views",
        "documentation": {}
    },
    {
        "label": "StudentViewset",
        "kind": 6,
        "importPath": "userapp.views",
        "description": "userapp.views",
        "peekOfCode": "class StudentViewset(ModelViewSet):\n    queryset = Student.objects.all()\n    serializer_class = StudentSerializer\n    permission_classes = [AllowAny]\n    lookup_field = 'slug'\n\"\"\" API \"\"\"\nclass FieldAPIViewset(ModelViewSet):\n    queryset = Field.objects.all()\n    serializer_class = FieldAPISerializer\n    permission_classes = [AllowAny]",
        "detail": "userapp.views",
        "documentation": {}
    },
    {
        "label": "FieldAPIViewset",
        "kind": 6,
        "importPath": "userapp.views",
        "description": "userapp.views",
        "peekOfCode": "class FieldAPIViewset(ModelViewSet):\n    queryset = Field.objects.all()\n    serializer_class = FieldAPISerializer\n    permission_classes = [AllowAny]\n    lookup_field = 'slug'\nclass RoleAPIViewset(ModelViewSet):\n    queryset = Role.objects.all()\n    serializer_class = RoleAPISerializer\n    permission_classes = [AllowAny]\n    lookup_field = 'slug'",
        "detail": "userapp.views",
        "documentation": {}
    },
    {
        "label": "RoleAPIViewset",
        "kind": 6,
        "importPath": "userapp.views",
        "description": "userapp.views",
        "peekOfCode": "class RoleAPIViewset(ModelViewSet):\n    queryset = Role.objects.all()\n    serializer_class = RoleAPISerializer\n    permission_classes = [AllowAny]\n    lookup_field = 'slug'\nclass WorkerAPIViewset(ModelViewSet):\n    queryset = Worker.objects.all()\n    serializer_class = WorkerAPISerializer\n    permission_classes = [AllowAny]\n    lookup_field = 'slug'",
        "detail": "userapp.views",
        "documentation": {}
    },
    {
        "label": "WorkerAPIViewset",
        "kind": 6,
        "importPath": "userapp.views",
        "description": "userapp.views",
        "peekOfCode": "class WorkerAPIViewset(ModelViewSet):\n    queryset = Worker.objects.all()\n    serializer_class = WorkerAPISerializer\n    permission_classes = [AllowAny]\n    lookup_field = 'slug'\nclass StudentAPIViewset(ModelViewSet):\n    queryset = Student.objects.all()\n    serializer_class = StudentAPISerializer\n    permission_classes = [AllowAny]\n    lookup_field = 'slug'",
        "detail": "userapp.views",
        "documentation": {}
    },
    {
        "label": "StudentAPIViewset",
        "kind": 6,
        "importPath": "userapp.views",
        "description": "userapp.views",
        "peekOfCode": "class StudentAPIViewset(ModelViewSet):\n    queryset = Student.objects.all()\n    serializer_class = StudentAPISerializer\n    permission_classes = [AllowAny]\n    lookup_field = 'slug'",
        "detail": "userapp.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"config.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]